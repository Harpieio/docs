"use strict";(self.webpackChunkharpie_docs=self.webpackChunkharpie_docs||[]).push([[9010],{656:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=s(4848),t=s(8453);const a={},o="Transferer",i={id:"contracts/transferer",title:"Transferer",description:"The Transferer contract has the ability to move your tokens to our noncustodial Vault. It cannot transfer your tokens anywhere else.",source:"@site/docs/contracts/transferer.md",sourceDirName:"contracts",slug:"/contracts/transferer",permalink:"/docs/contracts/transferer",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"Official Deployments",permalink:"/docs/contracts/official-contract-addresses"},next:{title:"Noncustodial Vault",permalink:"/docs/contracts/noncustodial-vault"}},c={},l=[{value:"Roles",id:"roles",level:2},{value:"Transfer Functions",id:"transfer-functions",level:2},{value:"Permission Functions",id:"permission-functions",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"transferer",children:"Transferer"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"Transferer"})," contract has the ability to move your tokens to our noncustodial Vault. It cannot transfer your tokens anywhere else."]}),"\n",(0,r.jsx)(n.p,{children:"Below is a function-by-function explanation of the code."}),"\n",(0,r.jsx)(n.h2,{id:"roles",children:"Roles"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-solidity",children:"address immutable private vaultAddress; // set during construction\naddress immutable private transferEOASetter; // set during construction\nmapping(address => bool) private _transferEOAs;\n"})}),"\n",(0,r.jsx)(n.p,{children:"There are three roles (one dynamic, two immutable and set during construction) in this contract:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"vaultAddress"})," is the address of the associated Noncustodial Vault"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"transferEOAs"})," are addresses that can call our ",(0,r.jsx)(n.a,{href:"#permission-functions",children:"Transfer Functions"}),". These addresses are controlled by our automated detection algorithm"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"transferEOASetter"})," is an address owned by Harpie that can set ",(0,r.jsx)(n.code,{children:"_transferEOAs"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"transfer-functions",children:"Transfer Functions"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-solidity",children:"function transferERC721(\n    address _ownerAddress, \n    address _erc721Address, \n    uint256 _erc721Id, \n    uint128 _fee\n) public returns (bool)\n\nfunction transferERC20(\n    address _ownerAddress, \n    address _erc20Address, \n    uint128 _fee\n) public returns (bool)\n\nfunction batchTransferERC721(ERC721Details[] memory _details) public returns (bool)\n\nfunction batchTransferERC20(ERC20Details[] memory _details) public returns (bool)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["These functions transfer user assets into the ",(0,r.jsx)(n.code,{children:"Vault"})," when we detect a malicious transaction. They're hardcoded to transfer tokens to the ",(0,r.jsx)(n.code,{children:"vaultAddress"})," role, and cannot submit user tokens anywhere else. They are only callable by the ",(0,r.jsx)(n.code,{children:"transferEOA"})," role."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"transfer"})," functions transfer a single user's assets (ERC20/ERC721) to the Vault."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"batchTransfer"})," functions are able to transfer multiple users' assets. We use these in case of large-scale attacks."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"permission-functions",children:"Permission Functions"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-solidity",children:"function addTransferEOA(address _newTransferEOA) public\n\nfunction removeTransferEOA(address _eoaToBeRemoved) public\n\nfunction removeAbilityToSetNewTransferEOAs() public\n"})}),"\n",(0,r.jsxs)(n.p,{children:["These functions are only callable by the role ",(0,r.jsx)(n.code,{children:"transferEOASetter"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"addTransferEOA"})," and ",(0,r.jsx)(n.code,{children:"removeTransferEOA"})," add and remove ",(0,r.jsx)(n.code,{children:"transferEOAs"}),", the wallets that are able to call the Transfer Functions"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"removeAbilityToSetNewTransferEOAs"})," is a permanent operation that prevents the addition of any new ",(0,r.jsx)(n.code,{children:"transferEOAs"}),". After calling this flag, Harpie is no longer able to add new wallets to the ",(0,r.jsx)(n.code,{children:"transferEOA"})," role, but will still able to remove them."]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>i});var r=s(6540);const t={},a=r.createContext(t);function o(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);